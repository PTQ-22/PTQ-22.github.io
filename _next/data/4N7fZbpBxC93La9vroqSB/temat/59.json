{"pageProps":{"subject":{"id":59,"name":"DFS","description":"labirynt.txt\r\n\r\n<pre>\r\n<code>\r\nXXX XXXXXX\r\nX X X    X\r\nX X    X X\r\nX XXXX XXX\r\nX X@X  X X\r\nX        X\r\nXXXXXXXXXX</code></pre>","code":"#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\npair<int, int> start_pos;\r\nvector<vector<bool>> visited;\r\nvector<string> grid;\r\nint width;\r\nint height;\r\nconst vector<pair<int, int>> MOVES = {\r\n    {0, 1}, {1, 0}, {-1, 0}, {0, -1}\r\n};\r\n\r\nbool dfs(pair<int, int> v)\r\n{\r\n    visited[v.first][v.second] = true;\r\n    if (v.first == 0 || v.second == 0 || v.first == height - 1 || v.second == width - 1)\r\n    {\r\n        grid[v.first][v.second] = '.';\r\n        return true;\r\n    }\r\n    bool isOnPath = false;\r\n    for (auto move : MOVES) {\r\n        int y = v.first + move.first;\r\n        int x = v.second + move.second;\r\n        if (grid[y][x] != 'X' && !visited[y][x]) {\r\n            isOnPath |= dfs({y, x});\r\n        }\r\n    }\r\n    if (isOnPath) grid[v.first][v.second] = '.';\r\n    return isOnPath;\r\n}\r\n\r\nint main()\r\n{\r\n    fstream file;\r\n    file.open(\"labirynt.txt\");\r\n\r\n    string line;\r\n    int i = 0;\r\n    while (getline(file, line))\r\n    {\r\n        grid.push_back(line);\r\n        for (int j = 0; j < line.size(); ++j) {\r\n            if (line[j] == '@') {\r\n                start_pos = {i, j};\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n\r\n    height = grid.size();\r\n    width = grid[0].size();\r\n\r\n    visited.resize(height, vector<bool>(width, false));\r\n\r\n    dfs(start_pos);\r\n    grid[start_pos.first][start_pos.second] = '@';\r\n\r\n    cout << \"EXIT FROM MAZE: \\n\\n\";\r\n    for (auto x : grid) {\r\n        cout << x << '\\n';\r\n    }\r\n\r\n    file.close();\r\n    return 0;\r\n}"}},"__N_SSG":true}