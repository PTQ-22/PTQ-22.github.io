{"pageProps":{"subject":{"id":22,"name":"Lista sÄ…siedztwa","description":"","code":"#include <iostream>\r\n#include <fstream>\r\nusing namespace std;\r\n\r\nstruct Node\r\n{\r\n    int num, weight;\r\n    Node* next;\r\n};\r\n\r\n\r\nvoid add_undirected_unweighted_edge(Node** list, int a, int b)\r\n{\r\n    Node* tmp;\r\n\r\n    tmp = new Node;\r\n    tmp->num = b;\r\n    tmp->next = list[a];\r\n    list[a] = tmp;\r\n\r\n    tmp = new Node;\r\n    tmp->num = a;\r\n    tmp->next = list[b];\r\n    list[b] = tmp;\r\n}\r\n\r\nvoid add_undirected_weighted_edge(Node** list, int a, int b, int c)\r\n{\r\n    Node* tmp;\r\n\r\n    tmp = new Node;\r\n    tmp->num = b;\r\n    tmp->weight = c;\r\n    tmp->next = list[a];\r\n    list[a] = tmp;\r\n\r\n    tmp = new Node;\r\n    tmp->num = a;\r\n    tmp->weight = c;\r\n    tmp->next = list[b];\r\n    list[b] = tmp;\r\n}\r\n\r\nvoid add_directed_unweighted_edge(Node** list, int a, int b)\r\n{\r\n    Node* tmp;\r\n\r\n    tmp = new Node;\r\n    tmp->num = b;\r\n    tmp->next = list[a];\r\n    list[a] = tmp;\r\n}\r\n\r\nvoid add_directed_weighted_edge(Node** list, int a, int b, int c)\r\n{\r\n    Node* tmp;\r\n\r\n    tmp = new Node;\r\n    tmp->num = b;\r\n    tmp->weight = c;\r\n    tmp->next = list[a];\r\n    list[a] = tmp;\r\n}\r\n\r\nbool is_edge(Node** list, int a, int b)\r\n{\r\n    Node* tmp;\r\n    tmp = list[a];\r\n    while (tmp != nullptr) {\r\n        if (tmp->num == b) {\r\n            return true;\r\n        }\r\n        tmp = tmp->next;\r\n    }\r\n    return false;\r\n}\r\n\r\nint main()\r\n{\r\n    ifstream file1, file2;\r\n\r\n    file1.open(\"graf1.txt\");\r\n\r\n    int n, m, a, b, c;\r\n\r\n    file1 >> n >> m;\r\n\r\n    Node** list1;\r\n    list1 = new Node*[n + 1];\r\n    for (int i = 1; i <= n; ++i) list1[i] = nullptr;\r\n\r\n    for (int i = 1; i <= m; ++i) {\r\n        file1 >> a >> b;\r\n        add_undirected_unweighted_edge(list1, a, b);\r\n    }\r\n\r\n    file1.close();\r\n\r\n    file2.open(\"graf3.txt\");\r\n\r\n    file2 >> n >> m;\r\n\r\n    Node** list2;\r\n    list2 = new Node*[n + 1];\r\n    for (int i = 1; i <= n; ++i) list2[i] = nullptr;\r\n\r\n    for (int i = 1; i <= m; ++i) {\r\n        file2 >> a >> b >> c;\r\n        add_undirected_weighted_edge(list2, a, b, c);\r\n    }\r\n\r\n    file2.close();\r\n    return 0;\r\n}\r\n"}},"__N_SSG":true}