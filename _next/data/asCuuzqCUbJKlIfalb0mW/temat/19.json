{"pageProps":{"subject":{"id":19,"name":"ONP - Odwrotna Notacja Polska","description":"<p><strong>ONP</strong> - postfiksowa notacja beznawiasowa. Aby obliczyć wartość wyrażenia zapisanego w tej notacji należy przeglądać wyrażenie od lewej do prawej. Gdy trafimy na liczbę to umieszczamy ją na stosie, a jeśli na operator to zdejmujemy dwie ostatnie liczby ze stosu. Wykonujemy na nich działanie i wynik wrzucamy na stos. Po przejściu przez całe wyrażenie na wierzchołku stosu znajduje się wynik.</p>","code":"#include <iostream>\r\n#include <stack>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    string expression = \"281-*\";\r\n\r\n    stack<int> my_stack;\r\n\r\n    for (int i = 0; i < expression.size(); ++i) {\r\n        int a, b;\r\n        switch (expression[i])\r\n        {\r\n        case '+':\r\n            a = my_stack.top(); \r\n            my_stack.pop();\r\n            b = my_stack.top(); \r\n            my_stack.pop();\r\n            my_stack.push(a + b);\r\n            break;\r\n        case '-':\r\n            a = my_stack.top(); \r\n            my_stack.pop();\r\n            b = my_stack.top(); \r\n            my_stack.pop();\r\n            my_stack.push(b - a);\r\n            break;\r\n        case '*':\r\n            a = my_stack.top(); \r\n            my_stack.pop();\r\n            b = my_stack.top(); \r\n            my_stack.pop();\r\n            my_stack.push(a * b);\r\n            break;\r\n        default:\r\n            my_stack.push(expression[i] - '0');\r\n            break;\r\n        }\r\n    }\r\n\r\n    cout << my_stack.top();\r\n\r\n    return 0;\r\n}"}},"__N_SSG":true}