{"pageProps":{"subject":{"id":57,"name":"Najdłuższy podciąg rosnący","description":"","code":"#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint lic(vector<int> &arr)\r\n{\r\n    int n = arr.size();\r\n    vector<int> dp(n, 1);\r\n    \r\n    for (int i = 0; i < n; ++i)\r\n        for (int j = 0; j < i; ++j)\r\n            if (arr[i] > arr[j] && dp[i] < dp[j] + 1)\r\n                dp[i] = dp[j] + 1;\r\n\r\n    int maxi = -1;\r\n    for (int i = 0; i < n; ++i)\r\n    {\r\n        maxi = max(maxi, dp[i]);\r\n    }\r\n    return maxi;\r\n}\r\n\r\nint main()\r\n{\r\n    fstream input;\r\n    input.open(\"ciagi.txt\");\r\n    ofstream output;\r\n    output.open(\"podciagi.txt\");\r\n\r\n    int k;\r\n    input >> k;\r\n\r\n    while (k--)\r\n    {\r\n        int n;\r\n        input >> n;\r\n        vector<int> arr(n);\r\n        for (int i = 0; i < n; ++i)\r\n        {\r\n            input >> arr[i];\r\n        }\r\n        output << lic(arr) << '\\n';\r\n    }\r\n\r\n    input.close();\r\n    output.close();\r\n    return 0;\r\n}"}},"__N_SSG":true}