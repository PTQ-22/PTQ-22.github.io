{"pageProps":{"subject":{"id":61,"name":"wersja tekstowa c++","description":"<div style=\"width: 100%; display: flex; justify-content: center; align-items: center; flex-direction: column; gap: 1px; color: white;\">\r\ngrid.txt\r\n\r\n<div style=\"user-select: all;\">\r\n<pre><code>01000000000000000000\r\n00100000000000000000\r\n11100000000000000000\r\n00000000000000000000\r\n00000000000000000000\r\n00000000000000000000\r\n00000000000000000000\r\n00000000000000000000\r\n00000000000000000000\r\n00000000000000000000</code></pre></div></div>","code":"#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\npair<int, int> MOVES[] = {\r\n    {-1, -1}, {-1, 0}, {-1, 1}, {0, 1}, {0, -1}, {1, -1}, {1, 0}, {1, 1}};\r\n\r\nint countNeighbours(vector<vector<char>> &grid, pair<int, int> v)\r\n{\r\n    int res = 0;\r\n    for (auto move : MOVES)\r\n    {\r\n        int y = v.first + move.first;\r\n        int x = v.second + move.second;\r\n        if (x == -1 || y == -1 || x == grid[0].size() || y == grid.size())\r\n            continue;\r\n        if (grid[y][x] == 'x')\r\n            res++;\r\n    }\r\n    return res;\r\n}\r\n\r\nint countAllNeighbours(vector<vector<char>> &grid, vector<vector<bool>> &toUpdate)\r\n{\r\n    int entities = 0;\r\n    for (int i = 0; i < grid.size(); ++i)\r\n    {\r\n        for (int j = 0; j < grid[i].size(); ++j)\r\n        {\r\n            int neighbours = countNeighbours(grid, {i, j});\r\n            if (grid[i][j] == '.')\r\n            {\r\n                if (neighbours == 3)\r\n                    toUpdate[i][j] = true;\r\n            }\r\n            else\r\n            {\r\n                entities += 1;\r\n                if (neighbours < 2 || neighbours > 3)\r\n                    toUpdate[i][j] = true;\r\n            }\r\n        }\r\n    }\r\n    return entities;\r\n}\r\n\r\nvoid updateGrid(vector<vector<char>> &grid, vector<vector<bool>> &toUpdate)\r\n{\r\n    for (int i = 0; i < grid.size(); ++i)\r\n    {\r\n        for (int j = 0; j < grid[i].size(); ++j)\r\n        {\r\n            if (toUpdate[i][j])\r\n            {\r\n                if (grid[i][j] == '.')\r\n                    grid[i][j] = 'x';\r\n                else\r\n                    grid[i][j] = '.';\r\n                toUpdate[i][j] = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid printGrid(vector<vector<char>> &grid)\r\n{\r\n    for (int i = 0; i < grid.size(); ++i)\r\n    {\r\n        for (int j = 0; j < grid[i].size(); ++j)\r\n        {\r\n            cout << grid[i][j] << ' ';\r\n        }\r\n        cout << '\\n';\r\n    }\r\n    cout << '\\n';\r\n}\r\n\r\nint main()\r\n{\r\n    fstream file;\r\n    file.open(\"grid.txt\");\r\n\r\n    vector<vector<bool>> toUpdate;\r\n\r\n    string line;\r\n    while (file >> line)\r\n    {\r\n        vector<bool> row;\r\n        for (char c : line)\r\n        {\r\n            if (c == '1')\r\n                row.push_back(true);\r\n            else\r\n                row.push_back(false);\r\n        }\r\n        toUpdate.push_back(row);\r\n    }\r\n    vector<vector<char>> grid(toUpdate.size(), vector<char>(toUpdate[0].size(), '.'));\r\n\r\n    do\r\n    {\r\n        updateGrid(grid, toUpdate);\r\n        printGrid(grid);\r\n        this_thread::sleep_for(chrono::milliseconds(1000));\r\n\r\n        #ifdef _WIN32\r\n            system(\"cls\");\r\n        #endif\r\n            system(\"clear\");\r\n            \r\n    } while (countAllNeighbours(grid, toUpdate));\r\n\r\n    file.close();\r\n    return 0;\r\n}"}},"__N_SSG":true}