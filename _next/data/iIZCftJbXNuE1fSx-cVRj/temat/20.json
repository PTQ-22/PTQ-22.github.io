{"pageProps":{"subject":{"id":20,"name":"Algorytm stacji rozrządowej Dijkstry","description":"<p><strong>Algorytm stacji rozrządowej Dijkstry</strong> - algorytm zamiany notacji infiksowej (nawiasowej) na postfiksową (ONP). </p>","code":"#include <iostream>\r\n#include <map>\r\n#include <stack>\r\nusing namespace std;\r\n\r\nstring infix_to_ONP(string input)\r\n{\r\n    map<char, int> op_priority = {\r\n        {'(', 0}, {'+', 1}, {'-', 1}, {'*', 2}, {'/', 2}\r\n    };\r\n\r\n    stack<char> op_stack;\r\n    string output = \"\";\r\n  \r\n    for (char c : input) {\r\n        if (c >= '0') { // is number\r\n            output += c;\r\n        }\r\n        else { // is operator\r\n            if (op_stack.empty()) {\r\n                op_stack.push(c);\r\n            }\r\n            else if (c == ')') {\r\n                while (op_stack.top() != '(') {\r\n                    output += op_stack.top();\r\n                    op_stack.pop();\r\n                }\r\n                op_stack.pop(); // remove '('\r\n            }\r\n            else if (op_priority[c] >= op_priority[op_stack.top()] || c == '(') {\r\n                op_stack.push(c);                \r\n            }\r\n            else {\r\n                while (op_priority[c] < op_priority[op_stack.top()]) {\r\n                    output += op_stack.top();\r\n                    op_stack.pop();\r\n                    if (op_stack.empty()) break;\r\n                }\r\n                op_stack.push(c);\r\n            }\r\n        }\r\n    }\r\n    while (!op_stack.empty()) {\r\n        output += op_stack.top();\r\n        op_stack.pop();\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nint main()\r\n{\r\n    cout << infix_to_ONP(\"5*8-6/(1+2)\");\r\n\r\n    return 0;\r\n}"}},"__N_SSG":true}