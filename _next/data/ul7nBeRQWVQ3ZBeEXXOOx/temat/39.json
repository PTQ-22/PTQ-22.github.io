{"pageProps":{"subject":{"id":39,"name":"Pole pod krzywÄ…","description":"","code":"#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\ndouble horner(int deg, vector<double> &a, double x)\r\n{\r\n    vector<double> b(deg + 1);\r\n    b[0] = a[0];\r\n    for (int i = 1; i <= deg; ++i)\r\n    {\r\n        b[i] = b[i - 1] * x + a[i];\r\n    }\r\n    return b[deg];\r\n}\r\n\r\ndouble field_rect(int deg, vector<double> &a, double start, double end)\r\n{\r\n    const double N = 1000;\r\n    double d = (end - start) / N;\r\n\r\n    double field = 0;\r\n\r\n    for (double i = start; i + d <= end; i += d)\r\n    {\r\n        double mid = (i + i + d) / 2;\r\n        field += (fabs(horner(deg, a, mid)) * d);\r\n    }\r\n    return field;\r\n}\r\n\r\ndouble field_trap(int deg, vector<double> &a, double start, double end)\r\n{\r\n    const double N = 1000;\r\n    double d = (end - start) / N;\r\n\r\n    double field = 0;\r\n\r\n    for (double i = start; i + d <= end; i += d)\r\n    {\r\n        field += (((fabs(horner(deg, a, i)) + fabs(horner(deg, a, i + d))) * d) / 2);\r\n    }\r\n    return field;\r\n}\r\n\r\ndouble sin_field_rect(double start, double end)\r\n{\r\n    const double N = 1000;\r\n    double d = (end - start) / N;\r\n\r\n    double field = 0;\r\n\r\n    for (double i = start; i + d <= end; i += d)\r\n    {\r\n        double mid = (i + i + d) / 2;\r\n        field += (fabs(sin(mid)) * d);\r\n    }\r\n    return field;\r\n}\r\n\r\ndouble sin_field_trap(double start, double end)\r\n{\r\n    const double N = 1000;\r\n    double d = (end - start) / N;\r\n\r\n    double field = 0;\r\n\r\n    for (double i = start; i + d <= end; i += d)\r\n    {\r\n        field += ((fabs(sin(i)) + fabs(sin(i + d)) * d) / 2);\r\n    }\r\n    return field;\r\n}\r\n\r\nint main()\r\n{\r\n    cout << \"Sin field rect: \" << sin_field_rect(0, M_PI) << '\\n';\r\n    cout << \"Sin field trap: \" << sin_field_rect(0, M_PI) << '\\n';\r\n\r\n    int degG = 7;\r\n    vector<double> G = {1, -3, -4, 12, -1, 3, 4, -12};\r\n    cout << \"G field rect: \" << field_rect(degG, G, -1, 1) << '\\n';\r\n    cout << \"G field trap: \" << field_trap(degG, G, -1, 1) << '\\n';\r\n\r\n    int degH = 3;\r\n    vector<double> H = {1, -1, -4, 4};\r\n\r\n    cout << \"H field rect: \" << field_rect(degH, H, -2, 2) << '\\n';\r\n    cout << \"H field trap: \" << field_trap(degH, H, -2, 2) << '\\n';\r\n\r\n\r\n    return 0;\r\n}"}},"__N_SSG":true}